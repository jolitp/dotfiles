* neovim "knowledge management system"
** learn how to make neovim plugins
*** learn lua for neovim
https://github.com/nanotee/nvim-lua-guide
*** nvim-treesitter / module-template
A repository template to create you own nvim-treesitter module !
*** how to make a colorscheme
** best practices for nvim config
*** folder structure
~/.config/nvim/
\ |-- init.lua -> entry point
\ |-- lua/ -> lua plugins config
\ |   |-- plugins/ -> houses plugin configuration 
\ |   |   |-- init.lua -> plugin install
\ |  \|   |-- ... -> plugin files/folders
\ |-- plugin
\     |-- packer_compiled.lua -> autogenerated by packer

NOTE: only make folders for plugin config inside lua/ if there is more than one
file to configure a plugin

NOTE: for the following files do not put into a subfolder:
- plugins.lua
- options.lua
- keybindings.lua

NOTE: need to see how it will work with the various plugin distributions
- spacenvim
- NvChad
- luanrvim
- astrovim
- codeart
- doom-nvim
- cosmicnvim
- vapournvim
- kickstart.nvim
- askfiy/nvim
- abstract
- dusk.nvim
*** utility functions
**** colors
**** import helpers
***** pcall wrapper for requiring modules
** NO parts of the config (jolitp)
a + means there are plugins for the plugin

use the already configured parts as examples to try integrate in doom nvim
*** +multiple nvim installs / configs
**** +startup
***** impatient.nvim
Improve startup time for Neovim
***** filetype.nvim
Easily speed up your neovim startup time!
**** chenvim
**** bob
**** Portable-vim
pvim, AKA seanvim, is an AllInOne-directory Neovim wrapper.

pvim will download the latest Neovim appimage and contain your config and
plugins to within the download directory. This should work on any linux computer
that can run an appimage, and can be downloaded from any computer that has git
and curl.

This is setup and intended for use with packer based configs, I don't know how
well it would do with other plugin managers.
**** nvim_utils.lua
https://github.com/norcalli/nvim_utils
This is a copy of my progress migrating my init.vim to init.lua.

The main utility here is nvim_utils.lua, and everything else is just an example
of how I use it.

This utility can be installed with any plugin manager, presumably, such as:
*** +dependencies/libraries
**** plenary
**** user.web_devicons
**** DONE miversen33 / import.nvim
A safe require override with niceties
*** +user settings
**** options
***** vim options
must have vim options:
****** videos
******* Here Are Some Basic Vim Settings That I Can't Live Without
https://www.youtube.com/watch?v=FWUeqcBQmDo
******* VimRC 2021 (Jan): How to setup your Vim RC
https://www.youtube.com/watch?v=DogKdiRx7ls&t=22s
******* Intro to Vim Customization | Configuration and Plugins
    https://www.youtube.com/watch?v=zE0hno3vV9M
******* Your first vimrc (2022)
https://www.youtube.com/watch?v=x2QJYq4IX6M
******* Vimrc and Vim Plug-In Overview
https://www.youtube.com/watch?v=cTBgtN-s2Zw
***** vim settings
***** set spell checking dictionaries
***** set abbreviations for pt-br accented words
**** keymaps
**** autocommands
*** DONE Packer
https://github.com/wbthomason/packer.nvim
**** TODO set autocommand to sync after saving plugins file
*** +productivity
**** +tasks
***** vim-dotoo
Org-mode like task logging & time tracking in Vim
***** phaazon / mind.nvim
The power of trees at your fingertips.
**** +PKMS
***** vimwiki
Personal Wiki for Vim
**** +notes
***** DOING Orgmode.nvim
****** DONE org bullets
****** TODO headlines.nvim
Add few highlight options for code blocks and headlines
****** TODO +code block evaluation
******* TODO sniprun
For code evaluation in blocks
******* TODO jubnzv / mdeval.nvim
****** TODO ranjithshegde / orgWiki.nvim
****** TODO get tables to work
vim-table-mode - For table support
****** TODO autocompletion
will the config mess up the lsp zero config?
****** TODO more plugins
https://github.com/topics/orgmode-nvim
****** TODO check if there is tangle support
****** TODO check if there is export support
***** DOING +neoorg
****** DOING neoorg
******* TODO config
******** TODO keybindings
******** TODO icons
****** NO max397574 / neorg-zettelkasten
Zettelkasten module for neorg

not implemented yet
*** +usability
**** +enhance vim/neovim capabilities
***** +macros
***** +text objects
****** glts / vim-textobj-comment
Vim text objects for comments
****** kana / vim-textobj-user
Vim plugin: Create your own text objects
***** +tags
****** Tagbar
Tagbar is a Vim plugin that provides an easy way to browse the tags of the
current file and get an overview of its structure.

It does this by creating a sidebar that displays the ctags-generated tags of the
current file, ordered by their scope.

This means that for example methods in C++ are displayed under the class they
are defined in.
***** +undo tree
****** vim-mundo
A Vim plugin to visualizes the Vim undo tree.
****** sjl/gundo.vim
A git mirror of gundo.vim
****** mbbill / undotree
The undo history visualizer for VIM
***** +motions
****** leap.nvim
****** hop.nvim
****** lightspeed
***** DOING +folds
****** folding-nvim
LSP-Powered folding plugin for neovim.
****** Vonr / foldcus.nvim
A minimal plugin for NeoVim for folding multiline comments
****** DOING nvim-ufo
The goal of nvim-ufo is to make Neovim's fold look modern and keep high
performance.

NOTE: does not seen to work with orgmode
***** +registers
***** +windows
****** gbrlsnchs / winpick.nvim
Simple window picker for Neovim
****** s1n7ax / nvim-window-picker
This plugins prompts the user to pick a window and returns the window id of the picked window
***** +command menu completion
****** DONE gelguy / wilder.nvim
A more adventurous wildmenu

wildmenu is already part of vim/neovim

vim settings for wildmenu:
https://gist.github.com/pthrasher/4206953
******* DONE Customising the pipeline
CLOSED: [2022-09-10 sáb 15:43]
******* DONE Customising the renderer
CLOSED: [2022-09-10 sáb 15:43]
******** DONE Popupmenu renderer
CLOSED: [2022-09-10 sáb 15:43]
******** DONE Devicons for popupmenu
CLOSED: [2022-09-10 sáb 15:43]
******* DONE Command Palette (Experimental)
CLOSED: [2022-09-10 sáb 15:43]
******* DONE NOT WORKING right now:
CLOSED: [2022-09-10 sáb 15:43]
******** DONE files are not being completed
CLOSED: [2022-09-10 sáb 15:43]
***** hydra.nvim
**** +programming
***** +test
****** nvim-coverage
Displays coverage information in the sign column.
****** nvim-neotest / neotest
An extensible framework for interacting with tests within NeoVim.
****** rcarriga / vim-ultest
The ultimate testing plugin for (Neo)Vim
***** refactoring.nvim
The Refactoring library based off the Refactoring book by Martin Fowler
***** ntangle.nvim
literate programming for neovim
***** Regex Nvim
***** sniprun
A neovim plugin to run lines/blocs of code (independently of the rest of the
file), supporting multiples languages
***** nvim-dap-virtual-text
This plugin adds virtual text support to nvim-dap. nvim-treesitter is used to
find variable definitions.
***** ntangle-ts
Experimental plugin to support parsing of tangled source code with treesitter.
***** andrewferrier / debugprint.nvim
Debugging in NeoVim the print() way!
**** +project management / session management
***** PenVim
project's root directory and documents indentation detector with project based config loader
***** confiture.nvim
A neovim lua plugin to save and launch project specific commands.
***** neoscopes
A lightweight Neovim plugin for simple project management or getting around in
large monorepos.
***** TODO Shatur / neovim-session-manager
A Neovim 0.7+ plugin that use built-in :mksession to manage sessions like
folders in VSCode. It allows you to save the current folder as a session to open
it later. The plugin can also automatically load the last session on startup,
save the current one on exit and switch between session folders.
https://github.com/Shatur/neovim-session-manager
**** +show colors on strings
***** nvim-colorizer
***** RRethy / vim-hexokinase
hexokinase.vim - (Neo)Vim plugin for asynchronously displaying the colours in
the file (#rrggbb, #rgb, rgb(a)? functions, hsl(a)? functions, web colours,
custom patterns)
**** DONE +telescope
**** +session
***** rmagatti / auto-session
A small automated session manager for Neovim
**** DONE whichkey
*** +editing
**** DOING +Snippets
***** DOING luasnip
****** TODO norg nsippets
****** DONE friendly-snippets

***** vsnip
***** ultsnip
**** +comments
***** Better Comments - NVIM
***** terrortylor / nvim-comment
A comment toggler for Neovim, written in Lua
***** terrortylor / nvim-comment
A comment toggler for Neovim, written in Lua
**** +completion
***** DOING +cmp
****** DONE nvim-cmp
****** DONE cmp-buffer
****** DONE cmp-path
****** DONE cmp-nvim-lsp
****** DONE cmp_luasnip
CLOSED: [2022-09-09 sex 22:18]
****** DONE cmp-nvim-lua
CLOSED: [2022-09-09 sex 22:19]
****** TODO cmp-cmdline
****** sources
******* hrsh7th/cmp-calc: nvim-cmp source for math calculation
******* ray-x/cmp-treesitter: cmp source for treesitter
******* lukas-reineke/cmp-rg: ripgrep source for nvim-cmp
******* quangnguyen30192/cmp-nvim-tags: tags sources for nvim-cmp
******* hrsh7th/cmp-nvim-lsp: nvim-cmp source for neovim builtin LSP client
**** +language server protocol (LSP)
***** DONE +bootstraping
****** DONE LSP Zero
A starting point to setup some lsp related features in neovim.
****** DONE mason
****** DONE mason-lspconfig.nvim
CLOSED: [2022-09-09 sex 22:20]
****** DONE nvim-lspconfig
CLOSED: [2022-09-09 sex 22:20]
***** +diagnostics
****** Trouble
A pretty list for showing diagnostics, references, telescope results, quickfix
and location lists to help you solve all the trouble your code is causing.
****** diaglist.nvim
Live render workspace diagnostics in quickfix with current buf errors on top,
buffer diagnostics in loclist
***** null-ls
***** weilbith / nvim-code-action-menu
Pop-up menu for code actions to show meta-information and diff preview
https://github.com/weilbith/nvim-code-action-menu
***** SmiteshP / nvim-navic
Simple winbar/statusline plugin that shows your current code context
***** DOING lspsaga
- lsp finder
- Code action
- Async lightbulb
- Hover doc
- Rename with preview and select
- Jump and show diagnostics
- Fastest show symbols in winbar by use cache
- Outline
- Float terminal
****** TODO config custom lsp kind icons with lsp kind plugin?
***** lukas-reineke / lsp-format.nvim
A wrapper around Neovims native LSP formatting.
***** lspkind
***** lsp_lines
***** Treehopper
Syntax trees + hop = Treehopper

A Plugin that provides region selection using hints on the abstract syntax tree
of a document.
***** Hierarchy.nvim
This plugin provides methods to navigate the type hierarchy of your code
(methods & classes)
***** simrat39 / symbols-outline.nvim
A tree like view for symbols in Neovim using the Language Server Protocol.
Supports all your favourite languages.

[maybe overshadowed by lspsaga, which have the same functionality and more]
**** ascii-blocks.nvim
**** syntax-tree-surfer
A plugin for Neovim that helps you surf through your document and move elements
around using the nvim-treesitter API.
**** vim-matchup
match-up is a plugin that lets you highlight, navigate, and operate on sets of
matching text. It extends vim's % key to language-specific words instead of just
single characters.
**** nvim-toggler
Invert text in vim, purely with lua.
**** Colortils.nvim
**** kylechui / nvim-surround
Add/change/delete surrounding delimiter pairs with ease. Written with heart in Lua.
**** mizlan / iswap.nvim
generated from nvim-treesitter/module-template

Interactively select and swap function arguments, list elements, and more.
Powered by tree-sitter.
**** cool-substitute
It's a simple and fast substitute for neovim. Can easily replace
multiple-cursors. Everything it uses are simple macros and search for quickly
substitute. It is made to be used as a complement for the powerful vim builtin
substitute.
**** gaoDean / autolist.nvim
Automatic list continuation and formatting for neovim, powered by lua
**** WilsonOh / emoji_picker-nvim
simple emoji picker plugin for neovim
*** +programming languages
**** bash
**** ... many others
**** C#
**** C,C++
***** ccls.nvim
A neovim plugin to configure ccls language server and use its extensions. ccls
is a language server for c, cpp and variants that offers comparable on-speec
features as clangd along with a many extensions.
**** fish
**** elisp
**** elixir
***** mix.nvim
A Mix (Elixir) wrapper for Neovim.
**** elm
**** rust
***** simrat39 / rust-tools.nvim
Tools for better development in rust using neovim's builtin lsp
***** noib3 / nvim-oxi
link Rust bindings to all things Neovim
**** GdScript
**** Python
***** Debugpy.nvim
Thin and hackable frontend command to nvim-dap and Debugpy for debugging Python
code in Neovim. This plugin provides a new command :Debugpy which can take a
number of sub-commands to generate an appropriate debugger configuration on the
fly.
**** Lua
**** javascript
***** axelvc / template-string.nvim
Neovim plugin to automatic change normal string to template string in JS like languages
**** typescript
**** vue
**** svelte
*** +markup languages
**** neorg
**** csv
***** chrisbra / csv.vim
A Filetype plugin for csv files
https://github.com/chrisbra/csv.vim
**** markdown
***** AckslD / nvim-FeMaco.lua
Catalyze your Fenced Markdown Code-block editing!
**** org
**** latex
***** lervag / vimtex
VimTeX: A modern Vim and neovim filetype plugin for LaTeX files.
**** html
***** pedro757 / emmet
Emmet language server for autocompletion in LSP compatible editors

[supposedly more up to date than the main repo]
***** aca / emmet-ls
Emmet support based on LSP.
**** css
***** mrshmllow / document-color.nvim (tailwind)
rainbow LSP-based colorizer for neovim

A colorizer plugin for tailwindcss and any lsp servers that support
textDocument/documentColor!
**** json
**** yaml
***** yaml.nvim
**** toml
*** +treesitter
**** +language grammars
***** tree-sitter-org
Org grammar for tree-sitter
**** autopairs
**** comment
**** autotag
**** nvim-treesitter-refactor
**** nvim-treesitter-context
[shows the current function, class, etc on the top part of the screen, even when
the definition is out of the screen]
**** nvim-ts-context-commentstring
A Neovim plugin for setting the commentstring option based on the cursor
location in the file. The location is checked via treesitter queries.

This is useful when there are embedded languages in certain types of files. For
example, Vue files can have many different sections, each of which can have a
different style for comments.
*** +git
**** gitsigns
**** neogit
**** call lazygit from nvim
**** pre-commit.nvim
This Neovim plugin triggers the pre-commit framework for various code linters
and formatters. It's designed to only work within a git repository that already
has a .pre-commit-config.yaml file. Please see the pre-commit documentation for
configuration.
**** vim-gitgutter (vimscript)
https://github.com/airblade/vim-gitgutter
*** +interface
**** +dashboard
***** dashboard-nvim
***** Startup.nvim
**** +focus
***** +distraction free layout
****** zen-mode
****** true-zen.nvim
***** +focus on one part of the screen
****** twilight
****** tint.nvim
****** shade.nvim
***** NO Lens.vim
A Vim Automatic Window Resizing Plugin

cannot make it work easily
**** DOING +file tree
***** NO nvim-tree
***** DOING +Neo-tree.nvim
****** DONE Neo-tree.nvim
****** neo-tree-diagnostics
**** DOING +buffer "tabs"
***** DOING bufferline
****** DONE fix white separator
CLOSED: [2022-09-10 sáb 11:36]
****** TODO fix shortcuts not working
alt+, and alt+. should change tabs, but it says it is not a command
****** TODO make tabs go to the right when you open the file tree
I'm not using nvim-tree, I'm using neo-tree.nvim
***** NO barbar
**** +terminal
***** akinsho / toggleterm.nvim
A neovim lua plugin to help easily manage multiple terminal windows
**** DOING +statusline
***** +choices
using staline for now, I want to migrate to heirline later, but that will be a
lot of work
****** DONE staline
****** lualine
****** TODO heirline.nvim
***** config I want
****** a single status line across the screen
look up TJ videos
****** file path and cwd
with abbreviated directories

different colors for the cwd and filename

filetype icon

changed indicator

read only indicator
****** name of help file
in recipes
****** mode indicator
with icons like the minimal staline config
****** cursor position
current line / total lines : column

percentage

"graph"

like the heir line recipe
https://github.com/rebelot/heirline.nvim/blob/master/cookbook.md#getting-started
****** MAYBE LSP?
****** Nvim Navic
at the top of the file

Show current location using LSP document symbols.

This example shows that it is possible to dynamically instantiate new children.
****** diagnostic summary
in recipes for heirline
****** git
in recipes
**** +notifications
***** nvim-notify
***** vigoux / notifier.nvim
Non-intrusive notification system for neovim
**** justinhj / battery.nvim
Neovim plugin to detect and view battery information
**** Indent Blankline.nvim
Indent guides for Neovim
**** Animate.vim
A Vim Window Animation Library
**** petertriho / nvim-scrollbar
Extensible Neovim Scrollbar
https://github.com/petertriho/nvim-scrollbar
**** lcheylus / overlength.nvim
A small Neovim plugin to highlight too long lines
**** suit.nvim
A neovim plugin that replaces the default vim.ui.input and vim.ui.select
implementations with floating windows.
**** RRethy / vim-illuminate
illuminate.vim - (Neo)Vim plugin for automatically highlighting other uses of
the word under the cursor using either LSP, Tree-sitter, or regex matching.
**** samodostal / image.nvim
framed_picture Image Viewer as ASCII Art for Neovim written in Lua
**** gui-font-resize
**** CosmicNvim / cosmic-ui
Cosmic-UI is a simple wrapper around specific vim functionality. Built in order
to provide a quick and easy way to create a Cosmic UI experience with Neovim!
https://github.com/CosmicNvim/cosmic-ui
*** +colorschemes
I chose one colorscheme for now
**** +colorscheme authoring
***** vim-colortemplate
***** rktjmp / lush.nvim
https://github.com/rktjmp/lush.nvim
Lush is a colorscheme creation aid for Neovim. It gives you real time feedback
as you edit, as well as color manipulation tools and some aids building a
structured colorscheme.

Lush colorschemes can easily be exported for use without Lush, either as a lua
table, vimscript commands or any other format. They can also be imported into
other Lua systems to access your color data.
**** ayu-theme / ayu-vim
https://github.com/ayu-theme/ayu-vim
**** roshnivim-cs
colorscheme for (neo)vim written in lua, specially made for roshnivim
Colorscheme with Tree-sitter support.
https://github.com/Abstract-IDE/Abstract-cs
**** lighthaus-theme / vim-lighthaus
A Lighthaus theme for (n)vim, vim-airline and lightline
https://github.com/lighthaus-theme/vim-lighthaus#screenshots
**** nightfox
**** tokyonight
**** colorless
***** vim-no-color-collections
Collection of Vim themes with barely any colors
**** doom-one.vim
**** rose-pine / neovim
Soho vibes for Neovim

Rosé Pine for Neovim

All natural pine, faux fur and a bit of soho vibes for the classy minimalist
**** DONE +oxocarbon.nvim
***** DONE B4mbus / oxocarbon-lua.nvim
A lua rewrite of the original oxocarbon theme.
***** NO shaunsingh / oxocarbon.nvim
A dark and light Neovim theme written in Rust, inspired by IBM Carbon.
*** +misc
**** actually.nvim
A neovim plugin to help load the file you meant to load.
**** stevearc / overseer.nvim
A task runner and job management plugin for Neovim
** parts of the config (doom)
a + means there are plugins for the plugin
*** +multiple nvim installs / configs
**** +startup
***** impatient.nvim
Improve startup time for Neovim
***** filetype.nvim
Easily speed up your neovim startup time!
**** chenvim
**** bob
**** Portable-vim
pvim, AKA seanvim, is an AllInOne-directory Neovim wrapper.

pvim will download the latest Neovim appimage and contain your config and
plugins to within the download directory. This should work on any linux computer
that can run an appimage, and can be downloaded from any computer that has git
and curl.

This is setup and intended for use with packer based configs, I don't know how
well it would do with other plugin managers.
**** nvim_utils.lua
https://github.com/norcalli/nvim_utils
This is a copy of my progress migrating my init.vim to init.lua.

The main utility here is nvim_utils.lua, and everything else is just an example
of how I use it.

This utility can be installed with any plugin manager, presumably, such as:
*** +dependencies/libraries
**** plenary
**** user.web_devicons
**** DONE miversen33 / import.nvim
A safe require override with niceties
*** +user settings
**** options
***** vim options
must have vim options:
****** videos
******* Here Are Some Basic Vim Settings That I Can't Live Without
https://www.youtube.com/watch?v=FWUeqcBQmDo
******* VimRC 2021 (Jan): How to setup your Vim RC
https://www.youtube.com/watch?v=DogKdiRx7ls&t=22s
******* Intro to Vim Customization | Configuration and Plugins
    https://www.youtube.com/watch?v=zE0hno3vV9M
******* Your first vimrc (2022)
https://www.youtube.com/watch?v=x2QJYq4IX6M
******* Vimrc and Vim Plug-In Overview
https://www.youtube.com/watch?v=cTBgtN-s2Zw
***** vim settings
***** set spell checking dictionaries
***** set abbreviations for pt-br accented words
**** keymaps
**** autocommands
*** TODO Packer
https://github.com/wbthomason/packer.nvim
**** TODO set autocommand to sync after saving plugins file
*** +productivity
**** +tasks
***** vim-dotoo
Org-mode like task logging & time tracking in Vim
***** phaazon / mind.nvim
The power of trees at your fingertips.
**** +PKMS
***** vimwiki
Personal Wiki for Vim
**** +notes
***** DOING Orgmode.nvim
****** DONE org bullets
****** TODO headlines.nvim
Add few highlight options for code blocks and headlines
****** TODO +code block evaluation
******* TODO sniprun
For code evaluation in blocks
******* TODO jubnzv / mdeval.nvim
****** TODO ranjithshegde / orgWiki.nvim
****** TODO get tables to work
vim-table-mode - For table support
****** TODO autocompletion
will the config mess up the lsp zero config?
****** TODO more plugins
https://github.com/topics/orgmode-nvim
****** TODO check if there is tangle support
****** TODO check if there is export support
***** TODO +neoorg
****** TODO neoorg
******* TODO config
******** TODO keybindings
******** TODO icons
****** NO max397574 / neorg-zettelkasten
Zettelkasten module for neorg

not implemented yet
*** +usability
**** +enhance vim/neovim capabilities
***** +macros
***** +text objects
****** glts / vim-textobj-comment
Vim text objects for comments
****** kana / vim-textobj-user
Vim plugin: Create your own text objects
***** +tags
****** Tagbar
Tagbar is a Vim plugin that provides an easy way to browse the tags of the
current file and get an overview of its structure.

It does this by creating a sidebar that displays the ctags-generated tags of the
current file, ordered by their scope.

This means that for example methods in C++ are displayed under the class they
are defined in.
***** +undo tree
****** vim-mundo
A Vim plugin to visualizes the Vim undo tree.
****** sjl/gundo.vim
A git mirror of gundo.vim
****** mbbill / undotree
The undo history visualizer for VIM
***** +motions
****** leap.nvim
****** hop.nvim
****** lightspeed
***** +folds
****** folding-nvim
LSP-Powered folding plugin for neovim.
****** Vonr / foldcus.nvim
A minimal plugin for NeoVim for folding multiline comments
****** nvim-ufo
The goal of nvim-ufo is to make Neovim's fold look modern and keep high
performance.

NOTE: does not seen to work with orgmode
***** +registers
***** +windows
****** gbrlsnchs / winpick.nvim
Simple window picker for Neovim
****** s1n7ax / nvim-window-picker
This plugins prompts the user to pick a window and returns the window id of the picked window
***** +command menu completion
****** gelguy / wilder.nvim
A more adventurous wildmenu

wildmenu is already part of vim/neovim

vim settings for wildmenu:
https://gist.github.com/pthrasher/4206953
******* Customising the pipeline
******* Customising the renderer
******** Popupmenu renderer
******** Devicons for popupmenu
******* Command Palette (Experimental)
******* NOT WORKING right now:
******** files are not being completed
***** hydra.nvim
**** +programming
***** +test
****** nvim-coverage
Displays coverage information in the sign column.
****** nvim-neotest / neotest
An extensible framework for interacting with tests within NeoVim.
****** rcarriga / vim-ultest
The ultimate testing plugin for (Neo)Vim
***** refactoring.nvim
The Refactoring library based off the Refactoring book by Martin Fowler
***** ntangle.nvim
literate programming for neovim
***** Regex Nvim
***** sniprun
A neovim plugin to run lines/blocs of code (independently of the rest of the
file), supporting multiples languages
***** nvim-dap-virtual-text
This plugin adds virtual text support to nvim-dap. nvim-treesitter is used to
find variable definitions.
***** ntangle-ts
Experimental plugin to support parsing of tangled source code with treesitter.
***** andrewferrier / debugprint.nvim
Debugging in NeoVim the print() way!
**** +project management / session management
***** PenVim
project's root directory and documents indentation detector with project based config loader
***** confiture.nvim
A neovim lua plugin to save and launch project specific commands.
***** neoscopes
A lightweight Neovim plugin for simple project management or getting around in
large monorepos.
***** TODO Shatur / neovim-session-manager
A Neovim 0.7+ plugin that use built-in :mksession to manage sessions like
folders in VSCode. It allows you to save the current folder as a session to open
it later. The plugin can also automatically load the last session on startup,
save the current one on exit and switch between session folders.
https://github.com/Shatur/neovim-session-manager
**** +show colors on strings
***** nvim-colorizer
***** RRethy / vim-hexokinase
hexokinase.vim - (Neo)Vim plugin for asynchronously displaying the colours in
the file (#rrggbb, #rgb, rgb(a)? functions, hsl(a)? functions, web colours,
custom patterns)
**** +telescope
***** +configure
**** +session
***** rmagatti / auto-session
A small automated session manager for Neovim
**** whichkey
*** +editing
**** +Snippets
***** luasnip
****** TODO norg nsippets
****** TODO friendly-snippets
***** vsnip
***** ultsnip
**** +comments
***** Better Comments - NVIM
***** terrortylor / nvim-comment
A comment toggler for Neovim, written in Lua
***** terrortylor / nvim-comment
A comment toggler for Neovim, written in Lua
**** +completion
***** DOING +cmp
****** DONE nvim-cmp
****** DONE cmp-buffer
****** DONE cmp-path
****** DONE cmp-nvim-lsp
****** DONE cmp_luasnip
CLOSED: [2022-09-09 sex 22:18]
****** DONE cmp-nvim-lua
CLOSED: [2022-09-09 sex 22:19]
****** TODO cmp-cmdline
****** sources
******* hrsh7th/cmp-calc: nvim-cmp source for math calculation
******* ray-x/cmp-treesitter: cmp source for treesitter
******* lukas-reineke/cmp-rg: ripgrep source for nvim-cmp
******* quangnguyen30192/cmp-nvim-tags: tags sources for nvim-cmp
******* hrsh7th/cmp-nvim-lsp: nvim-cmp source for neovim builtin LSP client
**** +language server protocol (LSP)
***** DONE +bootstraping
****** DONE LSP Zero
A starting point to setup some lsp related features in neovim.
****** DONE mason
****** DONE mason-lspconfig.nvim
CLOSED: [2022-09-09 sex 22:20]
****** DONE nvim-lspconfig
CLOSED: [2022-09-09 sex 22:20]
***** +diagnostics
****** Trouble
A pretty list for showing diagnostics, references, telescope results, quickfix
and location lists to help you solve all the trouble your code is causing.
****** diaglist.nvim
Live render workspace diagnostics in quickfix with current buf errors on top,
buffer diagnostics in loclist
***** null-ls
***** weilbith / nvim-code-action-menu
Pop-up menu for code actions to show meta-information and diff preview
https://github.com/weilbith/nvim-code-action-menu
***** SmiteshP / nvim-navic
Simple winbar/statusline plugin that shows your current code context
***** DOING lspsaga
- lsp finder
- Code action
- Async lightbulb
- Hover doc
- Rename with preview and select
- Jump and show diagnostics
- Fastest show symbols in winbar by use cache
- Outline
- Float terminal
****** TODO config custom lsp kind icons with lsp kind plugin?
***** lukas-reineke / lsp-format.nvim
A wrapper around Neovims native LSP formatting.
***** lspkind
***** lsp_lines
***** Treehopper
Syntax trees + hop = Treehopper

A Plugin that provides region selection using hints on the abstract syntax tree
of a document.
***** Hierarchy.nvim
This plugin provides methods to navigate the type hierarchy of your code
(methods & classes)
***** simrat39 / symbols-outline.nvim
A tree like view for symbols in Neovim using the Language Server Protocol.
Supports all your favourite languages.

[maybe overshadowed by lspsaga, which have the same functionality and more]
**** ascii-blocks.nvim
**** syntax-tree-surfer
A plugin for Neovim that helps you surf through your document and move elements
around using the nvim-treesitter API.
**** vim-matchup
match-up is a plugin that lets you highlight, navigate, and operate on sets of
matching text. It extends vim's % key to language-specific words instead of just
single characters.
**** nvim-toggler
Invert text in vim, purely with lua.
**** Colortils.nvim
**** kylechui / nvim-surround
Add/change/delete surrounding delimiter pairs with ease. Written with heart in Lua.
**** mizlan / iswap.nvim
generated from nvim-treesitter/module-template

Interactively select and swap function arguments, list elements, and more.
Powered by tree-sitter.
**** cool-substitute
It's a simple and fast substitute for neovim. Can easily replace
multiple-cursors. Everything it uses are simple macros and search for quickly
substitute. It is made to be used as a complement for the powerful vim builtin
substitute.
**** gaoDean / autolist.nvim
Automatic list continuation and formatting for neovim, powered by lua
**** WilsonOh / emoji_picker-nvim
simple emoji picker plugin for neovim
*** +programming languages
**** bash
**** ... many others
**** C#
**** C,C++
***** ccls.nvim
A neovim plugin to configure ccls language server and use its extensions. ccls
is a language server for c, cpp and variants that offers comparable on-speec
features as clangd along with a many extensions.
**** fish
**** elisp
**** elixir
***** mix.nvim
A Mix (Elixir) wrapper for Neovim.
**** elm
**** rust
***** simrat39 / rust-tools.nvim
Tools for better development in rust using neovim's builtin lsp
***** noib3 / nvim-oxi
link Rust bindings to all things Neovim
**** GdScript
**** Python
***** Debugpy.nvim
Thin and hackable frontend command to nvim-dap and Debugpy for debugging Python
code in Neovim. This plugin provides a new command :Debugpy which can take a
number of sub-commands to generate an appropriate debugger configuration on the
fly.
**** Lua
**** javascript
***** axelvc / template-string.nvim
Neovim plugin to automatic change normal string to template string in JS like languages
**** typescript
**** vue
**** svelte
*** +markup languages
**** neorg
**** csv
***** chrisbra / csv.vim
A Filetype plugin for csv files
https://github.com/chrisbra/csv.vim
**** markdown
***** AckslD / nvim-FeMaco.lua
Catalyze your Fenced Markdown Code-block editing!
**** org
**** latex
***** lervag / vimtex
VimTeX: A modern Vim and neovim filetype plugin for LaTeX files.
**** html
***** pedro757 / emmet
Emmet language server for autocompletion in LSP compatible editors

[supposedly more up to date than the main repo]
***** aca / emmet-ls
Emmet support based on LSP.
**** css
***** mrshmllow / document-color.nvim (tailwind)
rainbow LSP-based colorizer for neovim

A colorizer plugin for tailwindcss and any lsp servers that support
textDocument/documentColor!
**** json
**** yaml
***** yaml.nvim
**** toml
*** +treesitter
**** +language grammars
***** tree-sitter-org
Org grammar for tree-sitter
**** autopairs
**** comment
**** autotag
**** nvim-treesitter-refactor
**** nvim-treesitter-context
[shows the current function, class, etc on the top part of the screen, even when
the definition is out of the screen]
**** nvim-ts-context-commentstring
A Neovim plugin for setting the commentstring option based on the cursor
location in the file. The location is checked via treesitter queries.

This is useful when there are embedded languages in certain types of files. For
example, Vue files can have many different sections, each of which can have a
different style for comments.
*** +git
**** gitsigns
**** neogit
**** call lazygit from nvim
**** pre-commit.nvim
This Neovim plugin triggers the pre-commit framework for various code linters
and formatters. It's designed to only work within a git repository that already
has a .pre-commit-config.yaml file. Please see the pre-commit documentation for
configuration.
**** vim-gitgutter (vimscript)
https://github.com/airblade/vim-gitgutter
*** +interface
**** +dashboard
***** dashboard-nvim
***** Startup.nvim
**** +focus
***** +distraction free layout
****** zen-mode
****** true-zen.nvim
***** +focus on one part of the screen
****** twilight
****** tint.nvim
****** shade.nvim
***** NO Lens.vim
A Vim Automatic Window Resizing Plugin

cannot make it work easily
**** +file tree
***** nvim-tree
remove from doom?

or use both to not mess up with doom's config
***** +Neo-tree.nvim
****** Neo-tree.nvim
****** neo-tree-diagnostics
**** +buffer "tabs"
***** bufferline
****** fix white separator
****** fix shortcuts not working
alt+, and alt+. should change tabs, but it says it is not a command
****** make tabs go to the right when you open the file tree
I'm not using nvim-tree, I'm using neo-tree.nvim
***** barbar
**** +terminal
***** akinsho / toggleterm.nvim
A neovim lua plugin to help easily manage multiple terminal windows
**** +statusline
***** +choices
using staline for now, I want to migrate to heirline later, but that will be a
lot of work
****** staline
****** lualine
****** TODO heirline.nvim
config heirline in doom
***** config I want
****** a single status line across the screen
look up TJ videos
****** file path and cwd
with abbreviated directories

different colors for the cwd and filename

filetype icon

changed indicator

read only indicator
****** name of help file
in recipes
****** mode indicator
with icons like the minimal staline config
****** cursor position
current line / total lines : column

percentage

"graph"

like the heir line recipe
https://github.com/rebelot/heirline.nvim/blob/master/cookbook.md#getting-started
****** LSP?
****** Nvim Navic
at the top of the file

Show current location using LSP document symbols.

This example shows that it is possible to dynamically instantiate new children.
****** diagnostic summary
in recipes for heirline
****** git
in recipes
**** +notifications
***** nvim-notify
***** vigoux / notifier.nvim
Non-intrusive notification system for neovim
**** justinhj / battery.nvim
Neovim plugin to detect and view battery information
**** Indent Blankline.nvim
Indent guides for Neovim
**** Animate.vim
A Vim Window Animation Library
**** petertriho / nvim-scrollbar
Extensible Neovim Scrollbar
https://github.com/petertriho/nvim-scrollbar
**** lcheylus / overlength.nvim
A small Neovim plugin to highlight too long lines
**** suit.nvim
A neovim plugin that replaces the default vim.ui.input and vim.ui.select
implementations with floating windows.
**** RRethy / vim-illuminate
illuminate.vim - (Neo)Vim plugin for automatically highlighting other uses of
the word under the cursor using either LSP, Tree-sitter, or regex matching.
**** samodostal / image.nvim
framed_picture Image Viewer as ASCII Art for Neovim written in Lua
**** gui-font-resize
**** CosmicNvim / cosmic-ui
Cosmic-UI is a simple wrapper around specific vim functionality. Built in order
to provide a quick and easy way to create a Cosmic UI experience with Neovim!
https://github.com/CosmicNvim/cosmic-ui
*** +colorschemes
I chose one colorscheme for now
**** +colorscheme authoring
***** vim-colortemplate
***** TODO rktjmp / lush.nvim
https://github.com/rktjmp/lush.nvim
Lush is a colorscheme creation aid for Neovim. It gives you real time feedback
as you edit, as well as color manipulation tools and some aids building a
structured colorscheme.

Lush colorschemes can easily be exported for use without Lush, either as a lua
table, vimscript commands or any other format. They can also be imported into
other Lua systems to access your color data.
**** ayu-theme / ayu-vim
https://github.com/ayu-theme/ayu-vim
**** roshnivim-cs
colorscheme for (neo)vim written in lua, specially made for roshnivim
Colorscheme with Tree-sitter support.
https://github.com/Abstract-IDE/Abstract-cs
**** lighthaus-theme / vim-lighthaus
A Lighthaus theme for (n)vim, vim-airline and lightline
https://github.com/lighthaus-theme/vim-lighthaus#screenshots
**** nightfox
**** tokyonight
**** colorless
***** vim-no-color-collections
Collection of Vim themes with barely any colors
**** doom-one.vim
**** rose-pine / neovim
Soho vibes for Neovim

Rosé Pine for Neovim

All natural pine, faux fur and a bit of soho vibes for the classy minimalist
**** +oxocarbon.nvim
***** DONE B4mbus / oxocarbon-lua.nvim
A lua rewrite of the original oxocarbon theme.
***** NO shaunsingh / oxocarbon.nvim
A dark and light Neovim theme written in Rust, inspired by IBM Carbon.
**** DONE doom-one
*** +misc
**** actually.nvim
A neovim plugin to help load the file you meant to load.
**** stevearc / overseer.nvim
A task runner and job management plugin for Neovim
** pre-built configs
*** lunarvim
https://github.com/LunarVim/LunarVim
*** abzcoding / lvim
astronaut Bloated LunarVim rocket
*** abzcoding / nvim
my backup neovim config
*** ayamir / nvimdots
A well configured and structured Neovim.
https://github.com/ayamir/nvimdots
*** jdhao / nvim-config
A modern Neovim configuration with full battery for Python, C++, Markdown,
LaTeX, and more...
*** max397574/omega-nvim
This is my new neovim config after ignis-nvim.
*** max397574 / ignis-nvim
This are my neovim configurations.

https://github.com/max397574/omega-nvim is more up to date

Most likely this config won't work for you if you just clone it because there is
so much local stuff. But feel free to use it as a reference and copy configs or
code snippets you

- Colorscheme Switcher (live preview)

- Custom Diagnostic Float (layout and messages)
*** DONE NTBBloodbath / doom-nvim
A Neovim configuration for the advanced martian hacker

Port of the doom-emacs framework, its goal is to add useful functions to Neovim
to start working in a stable and efficient development environment without
spending a lot of time configuring everything.
*** tamton-aquib / nvim
Personal neovim config
*** tjdevries / config_manager
My configuration files and tools
*** NO Abstract-IDE/Abstract
Abstract, The Neovim configuration to achieve the power of Modern IDE.

I like the theme/colorscheme

https://github.com/Abstract-IDE/Abstract-cs
*** NO SpaceVim/SpaceVim (vimscript)
A community-driven modular vim/neovim distribution, like spacemacs but for
vim/neovim.
*** NO CosmicNvim/CosmicNvim
CosmicNvim is a lightweight and opinionated Neovim config for web development,
specifically designed to provide a dizzy COSMIC programming experience!

+ has its own UI framework (cosmic UI)
+ has its own statusline (galaxyline)
*** YES artart222/CodeArt
https://github.com/artart222/CodeArt
A fast general-purpose IDE written entirely in Lua with an installer for
Linux/Windows/macOS and built in :CodeArtUpdate command for updating it.

+ how they configure the errors showing on the image[status line]?

  the numbers column is colored red for error and the part of the line that is
  the cause of the error is underlined and colored too
*** NO crivotz/nv-ide (check plugins)
Neovim custom configuration, oriented for full stack developers (rails, ruby,
php, html, css, SCSS, JavaScript).

+ many plugins!
*** NO LunarVim/LunarVim
This project aims to help one transition away from VSCode, and into a superior
text editing experience.
*** NO hackorum/VapourNvim
A Neovim config for THE ULTIMATE vim IDE-like experience.
*** NO vi-tality/neovitality
A full-featured Neovim distribution, packaged with Nix Flake for easy
installation and reproducibility.
*** NO siduck76/NvChad
An attempt to make Neovim cli as functional as an IDE while being very beautiful
and less bloated.
*** NO nvoid-lua/nvoid
Simple Neovim config written in Lua with all the modern features available in
any IDE
*** MAYBE cstsunfu/.sea.nvim
A modular Neovim configuration with beautiful UI and some useful
features(Pomodoro Clock, Window Number).

+ pomodoro
*** SKIP shaeinst/roshnivim (became abstract)
Roshnivim, can be called neovim's distro, is a predefined configs so that you
don't need 1000hr to setup neovim as an IDE.
*** TODO AstroNvim/AstroNvim
AstroNvim is an aesthetic and feature-rich Neovim config that is extensible and
easy to use with a great set of plugins.
https://astronvim.github.io/acknowledgements#plugins-used-in-astronvim
*** MAYBE shaunsingh/nyoom.nvim
Blazing fast, configurable, minimal and lispy neovim config written in Fennel.
Base config for users to extend and add upon, leading to a more unique editing
experience.
*** NO CanKolay3499/CNvim
A lightweight Neovim config for web development.
*** NO jrychn/moduleVim
A very easy to use for backend and frontend, install lsp automatically.
*** MAYBE askfiy/nvim
An excellent Neovim configuration, which is as powerful as Vscode, is lightning fast zap.

+ interesting way of letting the user configure

  although does not seen logic enough
*** NO imbacraft/dusk.nvim
Dusk is a lightweight, aesthetically minimal Neovim config, written in Lua, able
to provide for web and Java development.
*** NO nvim-lua/kickstart.nvim
A launch point for your personal Neovim configuration.
*** 0xsamrath / kyoto.nvim
https://github.com/0xsamrath/kyoto.nvim kyoto.nvim is a fast zap, functional,
beautiful, and highly customizable neovim configuration
** tutorials
*** DONE chris @ machine
https://www.youtube.com/c/ChrisAtMachine
**** DONE neovim from scratch (kinda outdated)
https://www.youtube.com/playlist?list=PLhoH5vyxr6Qq41NFL4GvhFp-WLd5xzIzZ
***** github repo
https://github.com/LunarVim/Neovim-from-scratch
***** DONE 1 Neovim IDE from Scratch - Introduction (100% lua config)
CLOSED: [2022-08-27 sáb 22:55]
https://github.com/LunarVim/Neovim-from-scratch/tree/01-options

watch out for plugins on: =~/.local/share/nvim/site=

to call vimscript from lua:

vim.cmd [(ignore)[set iskeyword+=-]]         -- ???
***** DONE 2 Neovim - Setting options with Lua
CLOSED: [2022-08-27 sáb 22:55]
***** DONE 3 Neovim - ~25 Custom Keymaps set with Lua
CLOSED: [2022-08-27 sáb 22:56]
***** DONE 4 Neovim - Plugin Deep Dive, Lazyloading, Autoinstall, 100% Lua with Packer.nvim
CLOSED: [2022-08-28 dom 12:20]
all neovim plugins are github repos:
use "user/repo"

plugins are installed to:
~/.local/share/nvim/site

the files in the plugin/ directory in your config should be put on .gitignore
***** DONE 5 Neovim - Colorschemes and how to set them
CLOSED: [2022-08-28 dom 12:20]
***** DONE 6 Neovim - Completion Tutorial 100% Lua
CLOSED: [2022-08-28 dom 15:59]
***** SKIP 7 Add Icons to your Fonts with Nerd Fonts
***** TODO 8 Neovim - LSP Setup Tutorial (Built in LSP 100% Lua)
: lua go to definition not working, :lspinfo only shows null-ls as a source

[could not make it work]

look for schemas for other languages like:

- json
- toml?
- yml?

https://www.schemastore.org/json/
***** DONE 9 Neovim - Telescope: a highly extendable fuzzy finder
CLOSED: [2022-08-29 seg 15:41]
***** DONE 10 Neovim - Treesitter Syntax Highlighting
CLOSED: [2022-08-29 seg 18:04]
to get what treesitter node is a part of code use:

:TSHighlightCaputresUnderCursor

that will show a list of possible identifiers in order of "weight"

the higher the number wins
***** DONE 11 Neovim - From Scratch Q&A
CLOSED: [2022-08-29 seg 18:15]
***** DONE 12 Neovim - Autopairs automatically close () [] {} '' ""
CLOSED: [2022-08-29 seg 18:50]
to find the file type:

:echo &ft

ft for file type
***** DONE 13 Neovim - Comments (JSX Commenting support explained)
CLOSED: [2022-08-29 seg 22:03]
***** DONE 14 Neovim - Gitsigns Powerful Git Plugin for Neovim
CLOSED: [2022-08-29 seg 22:03]
***** DONE 15 Neovim - NvimTree File Explorer Written In Lua
CLOSED: [2022-08-29 seg 22:03]
***** DONE 16 Neovim - Bufferline Buffers vs Tabs vs Windows Explanation
CLOSED: [2022-08-29 seg 23:41]
***** DONE 17 Neovim - Null-LS Formatting, Linting & more
CLOSED: [2022-08-30 ter 21:39]
(Supports prettier, black, eslint, flake8 & more)

to check what source is being used call:

:NullLsInfo

also good to check the supported sources when setting up a programming language
in neovim
***** DONE 18 Neovim - Toggleterm | Open terminal programs in Neovim
CLOSED: [2022-08-30 ter 21:39]
**** SKIP Neovim
https://www.youtube.com/playlist?list=PLhoH5vyxr6QqPtKMp03pcJd_Vg8FZ0rtg
***** SKIP 1 - Setup Neovim like an IDE (10:16)
outdated

using vimscript still
***** SKIP 2 - Neovim - Installing Plugins with Vim-Plug (6:48)
***** TODO 3 - Essential Settings for Neovim (10:31)
***** TODO 4 - Neovim - Adding a colorscheme/theme (5:05)
***** TODO 5 - Neovim - Setting Up VSCode Intellisense with CoC [LSP] (12:27)
***** TODO 6 - Add Icons to your Fonts with Nerd Fonts (10:49)
***** TODO 7 - Neovim - Install a Status Line with Airline (6:56)
***** TODO 8 - Neovim - Exploring files with coc-explorer (12:13)
***** TODO 9 - Navigating your files with Neovim and Ranger (8:39)
***** TODO 10 - FZF will change your workflow completely (13:29)
***** TODO 11 - Neovim - Add Some Color with Colorizer (8:36)
***** TODO 12 - Neovim - Project Management with Startify (12:32)
***** TODO 13 - Neovim - Git integration (8:55)
***** TODO 14 - Neovim - Sneak is a better way to navigate text (6:28)
***** TODO 15 - Neovim - Move faster with Quickscope (7:29)
***** TODO 16 - Neovim - Never forget your keybindings with vim which key (10:25)
***** TODO 17 - Neovim - Open anything with Floaterm (6:14)
***** TODO 18 - Neovim - Code Faster with Snippets (19:05)
***** TODO 19 - Neovim - Codi is an Interactive Scratchpad for Hackers (9:39)
***** TODO 20 - Neovim - Discover Extensions with CoC Marketplace (6:05)
***** TODO 21 - VSCode with embedded Neovim (19:02)
***** TODO 22 - Neovim - Treesitter creating a Colorscheme (1:55:50)
***** TODO 23 - Neovim - Java Vimspector Live (2:57:31)
***** TODO 24 - Setting up Neovim for Java Development (17:57)
***** TODO 25 - Neovim - LSP Completion Symbols with CoC (8:51)
***** TODO 26 - Neovim - Why I'm switching to Native LSP over CoC (11:24)
***** TODO 27 - Neovim - Native LSP Setting Up Autocomplete and Language Servers (19:24)
***** TODO 28 - Neovim - As a Lua IDE (Autocomplete, diagnostics and formatting) (18:24)
***** TODO 29 - Neovim - Convert init.vim to init.lua (Live) (3:10:48)
***** TODO 30 - Neovim - Configuring Language Servers (Live) (1:28:55)
***** TODO 31 - Neovim - Snippet support (vsnip, maybe ultisnips) [LIVE] (2:34:19)
***** TODO 32 - Neovim - VSCode setup with init.lua [LIVE] (8:52)
***** TODO 33 - Neovim - Working on new features for NVCode, Q&A (1:29:25)
***** TODO 34 - Neovim - User Settings for NVCode, Q&A (1:13:33)
***** TODO 35 - LunarVim - Discussing a Vision and the future of this project (1:30:40)
***** TODO 36 - Neovim - Install LunarVim a config with sane defaults (~30s install) (13:13)
*** DONE Neil Sabde
https://www.youtube.com/channel/UCIfWXqdiEvM8nBFAA594Kjw/videos
**** Neovim Lua From Scratch
https://www.youtube.com/playlist?list=PLPDVgSbOnt7LXQ8DTzu37UwCpA0elyD0V

github for configs
https://github.com/hackorum/nfs
***** DONE 1 - Syntax Highlighting With Treesitter - Neovim Lua From Scratch #1 (12:40)
CLOSED: [2022-09-01 qui 00:34]
***** DONE 2 - Settings in Neovim - Neovim Lua From Scratch #2 (14:56)
CLOSED: [2022-09-01 qui 10:06]
***** DONE 3 - Installing lualine.nvim and bufferline.nvim - Neovim Lua From Scratch #3 (9:07)
CLOSED: [2022-09-01 qui 11:03]
***** DONE 4 - Installing nvim-tree.lua - Neovim Lua From Scratch #4 (7:16)
CLOSED: [2022-09-01 qui 16:54]
***** DONE 5 - Treesitter Plugins - Neovim Lua From Scratch #5 (10:12)
CLOSED: [2022-09-01 qui 16:55]
***** DONE 6 - Keybindings and Whichkey - Neovim Lua From Scratch #6 (15:56)
CLOSED: [2022-09-01 qui 17:17]
***** DONE 7 - Fix nvim_tree setup error - Neovim Lua From Scratch #7 (0:53)
CLOSED: [2022-09-01 qui 17:17]
***** DONE 8 - Installing telescope.nvim - Neovim Lua From Scratch #8 (12:47)
CLOSED: [2022-09-01 qui 19:38]
***** DONE 9 - Autocomplete with nvim-cmp - Neovim Lua From Scratch #9 (13:03)
CLOSED: [2022-09-02 sex 14:37]
***** DONE 10 - Language Servers - Neovim Lua From Scratch #10 (21:19)
CLOSED: [2022-09-02 sex 18:15]
***** SKIP 11 - Snippets With Vsnip - Neovim Lua From Scratch #11 (8:04)
***** SKIP 12 - Color Highlighting With colorizer.lua - Neovim Lua From Scratch #12 (1:02)
***** DONE 13 - GitSigns - Neovim Lua From Scratch #13 (2:58)
CLOSED: [2022-09-02 sex 20:13]
***** SKIP 14 - Fix autopairs error - Neovim Lua From Scratch #14 (0:37)
***** DONE 15 - Dashboard for Neovim - Neovim Lua from Scratch #15 (6:43)
CLOSED: [2022-09-02 sex 21:52]
***** DONE 16 - Indent Guides in Neovim - Neovim Lua From Scratch #16 (8:06)
CLOSED: [2022-09-02 sex 23:47]
***** SKIP 17 - Auto Format In Neovim - Neovim Lua From Scratch #17 (11:54)
not working
***** DONE 18 - Floating and split terminal - Neovim Lua From Scratch #18 (10:19)
CLOSED: [2022-09-03 sáb 13:06]
***** DONE 19 - Comments in Neovim - Neovim Lua From Scratch #19 (3:04)
CLOSED: [2022-09-03 sáb 13:56]
***** DONE 20 - Lazy Loading Plugins - Neovim Lua From Scratch #20 (18:41)
CLOSED: [2022-09-05 seg 17:17]
***** DONE 21 - LSP Keybindings & Lspsaga.nvim - Neovim Lua From scratch #21 (20:45)
CLOSED: [2022-09-05 seg 21:16]
the link used in the video:

https://github.com/kkharji/lspsaga.nvim
***** SKIP 22 - Nvim Lsp Installer - Neovim Lua From Scratch #22 (13:07)
lsp installer is deprecated, use mason instead
***** DONE 23 - Null-ls.nvim for formatting - Neovim Lua From Scratch #23 (7:05)
CLOSED: [2022-09-06 ter 11:02]
***** DONE 24 - Zen Mode And Twilight - Neovim Lua From Scratch #24 (9:35)
CLOSED: [2022-09-06 ter 12:08]
***** DONE 25 - Document Highlight In LSP - Neovim Lua From Scratch #25 (2:48)
CLOSED: [2022-09-06 ter 12:13]
***** SKIP 26 - Discord Rich Presence In Neovim - Neovim Lua From Scratch #26 (1:45)
***** DONE 27 - Replace lualine with staline - Neovim Lua From Scratch #27 (8:42)
CLOSED: [2022-09-06 ter 14:07]
***** DONE 28 - Packer Modifications - Neovim Lua From Scratch #28 (4:15)
CLOSED: [2022-09-06 ter 14:08]
**** DONE How to install VapourNvim (distribution)
CLOSED: [2022-09-02 sex 20:13]
https://www.youtube.com/watch?v=fa3d59agEDs

*** DONE Tuff Gniuz
**** DONE Configuring Neovim
https://www.youtube.com/playlist?list=PLIHtvvGZ1O3jBXdp9Id02vRuOEOWIGB_w
***** DONE 1 - Neovim Lua Config - Configuring Neovim #1 (25:51)
CLOSED: [2022-09-06 ter 16:02]
***** DONE 2 - Configuring Neovim With LSP - Configuring Neovim #2 (20:22)
CLOSED: [2022-09-06 ter 17:53]
***** DONE 3 - Neovim Plugin (Fancy Notifications And More Fancy Plugins) - Configuring Neovim #3 (11:09)
CLOSED: [2022-09-07 qua 13:30]
***** DONE 4 - Neovim Tree-Sitter - Configuring Neovim Part 4 #neovim (15:52)
CLOSED: [2022-09-07 qua 13:30]
***** DONE 5 - Neovim Fuzzy Finder - Telescope (6:07)
CLOSED: [2022-09-07 qua 13:41]
***** SKIP 6 - Neovim LSP - Easy LSP Server Installation for Neovim #neovim (6:04)
use mason instead
***** DONE 7 - Neovim Null-LS - Hooks For LSP | Format Code On Save (8:52)
CLOSED: [2022-09-07 qua 19:10]
***** DONE 8 - Neovim Window Focus - Dim Inactive Windows In Neovim With Shade #neovim (2:29)
CLOSED: [2022-09-07 qua 19:19]
Not working
*** wincent
**** Neovim (etc) screencasts
https://www.youtube.com/playlist?list=PLwJS-G75vM7kFO-yUkyNphxSIdbi_1NKX
***** TODO 1 - Vim screencast #1: Intro (2:10)
***** TODO 2 - Vim screencast #2: Folding (5:48)
***** TODO 3 - Vim screencast #3: Oil vs vinegar (8:58)
***** TODO 4 - Vim screencast #4: Color (7:02)
***** TODO 5 - Vim screencast #5: Splits (basic operations) (5:58)
***** TODO 6 - Vim screencast #6: Splits (resizing) (5:37)
***** TODO 7 - Vim screencast #7: Splits (moving) (3:35)
***** TODO 8 - Vim screencast #8: Splits → tabs (3:57)
***** TODO 9 - Vim screencast #9: Karabiner (9:00)
***** TODO 10 - Vim screencast #10: Snippets and autocomplete (8:33)
***** TODO 11 - Vim screencast #11: Relative numbers (5:45)
***** TODO 12 - Vim screencast #12: Focus (8:36)
***** TODO 13 - Vim screencast #13: Multiple cursors (7:30)
***** TODO 14 - Vim screencast #14: *Ncgn (5:27)
***** TODO 15 - Vim screencast #15: Organization (7:15)
***** TODO 16 - Vim screencast #16: Static site case study (6:35)
***** TODO 17 - Vim screencast #17: Regular expressions (5:20)
***** TODO 18 - Vim screencast #18: Look-ahead & look-behind (3:52)
***** TODO 19 - Vim screencast #19: Case tricks (5:05)
***** TODO 20 - Vim screencast #20: Loupe (4:48)
***** TODO 21 - Vim screencast #21: Scalpel update (2:37)
***** TODO 22 - Vim screencast #22: Italics (8:24)
***** TODO 23 - Vim screencast #23: Macro tricks (7:06)
***** TODO 24 - Vim screencast #24: Terminus (5:56)
***** TODO 25 - Vim screencast #25: Live coding (9:40)
***** TODO 26 - Vim screencast #26: tmux (11:10)
***** TODO 27 - Vim screencast #27: tmux config (6:14)
***** TODO 28 - Vim screencast #28: Visual mappings (2:09)
***** TODO 29 - Vim screencast #29: Command mappings (1:35)
***** TODO 30 - Vim screencast #30: Normal mappings (5:17)
***** TODO 31 - Vim screencast #31: Leader mappings (7:21)
***** TODO 32 - Vim screencast #32: Settings (Part I) (4:33)
***** TODO 33 - Vim screencast #33: Settings (Part II) (5:22)
***** TODO 34 - Vim screencast #34: Settings (Part III) (5:16)
***** TODO 35 - Vim screencast #35: Settings (Part IV) (4:49)
***** TODO 36 - Vim screencast #36: Settings (Part V) (11:40)
***** TODO 37 - Vim screencast #37: Processes (3:59)
***** TODO 38 - Vim screencast #38: Better focus (3:50)
***** TODO 39 - Vim screencast #39: Multi-line sorting (12:00)
***** TODO 40 - Vim screencast #40: tmux prompt navigation (5:21)
***** TODO 41 - Vim screencast #41: Colemak (14:55)
***** TODO 42 - Vim screencast #42: Recursive macros and Replay (10:49)
***** TODO 43 - Vim screencast #43: macOS Sierra (17:59)
***** TODO 44 - Vim screencast #44: Profiling and optimization (13:11)
***** TODO 45 - Vim screencast #45: Open in Terminal Vim (4:13)
***** TODO 46 - Vim screencast #46: Directory hashes (5:34)
***** TODO 47 - Vim screencast #47: Statuslines (5:05)
***** TODO 48 - Vim screencast #48: Even better focus (7:32)
***** TODO 49 - Vim screencast #49: Sending email with vim (5:50)
***** TODO 50 - Vim screencast #50: Email demo (3:25)
***** TODO 51 - Vim screencast #51: Composing email (5:07)
***** TODO 52 - Vim screencast #52: Viewing email with Vim (3:56)
***** TODO 53 - Vim screencast #53: Email architecture (12:43)
***** TODO 54 - Vim screencast #54: Working with nested code (5:56)
***** TODO 55 - Vim screencast #55: Statusline improvements (3:04)
***** TODO 56 - Vim screencast #56: HTML email (8:44)
***** TODO 57 - Vim screencast #57: Neovim (7:53)
***** TODO 58 - Vim screencast #58: deoplete.nvim (9:35)
***** TODO 59 - Vim screencast #59: Karabiner Elements (6:45)
***** TODO 60 - Vim screencast #60: iskeyword (2:56)
***** TODO 61 - Vim screencast #61: Cyclic alternates with Projectionist (6:52)
***** TODO 62 - Vim screencast #62: Eunuch (4:20)
***** TODO 63 - Vim screencast #63: Dotfiles (19:29)
***** TODO 64 - Vim screencast #64: Fold styling (8:13)
***** TODO 65 - Vim screencast #65: Moving lines vertically (7:50)
***** TODO 66 - Vim screencast #66: iTerm Dynamic Profiles (11:15)
***** TODO 67 - Vim screencast #67: Editing crontabs (2:54)
***** TODO 68 - Vim screencast #68: Keylogging (10:17)
***** TODO 69 - Vim screencast #69: zsh prompts (7:48)
***** TODO 70 - Vim screencast #70: SpaceFN (14:35)
***** TODO 71 - Vim screencast #71: Goyo (7:13)
***** TODO 72 - Vim screencast #72: tabline (4:52)
***** TODO 73 - Vim screencast #73: Command line editing (4:46)
***** TODO 74 - Vim screencast #74: vim-slime (11:16)
***** TODO 75 - Vim screencast #75: Plugin managers (16:33)
***** TODO 76 - Vim screencast #76: vcs-jump (10:23)
***** TODO 77 - Vim screencast #77: Merge conflicts (16:11)
***** TODO 78 - Vim screencast #78: Language Server Protocol (10:33)
***** TODO 79 - Vim screencast #79: Project-specific overrides (9:15)
***** TODO 80 - Vim screencast #80: Learning Vim (7:26)
***** TODO 81 - Vim screencast #81: Compound FileTypes & Autocommands (8:29)
***** TODO 82 - Vim screencast #82: Testing compiler plugins (8:50)
***** TODO 83 - Vim screencast #83: Emoji (7:28)
***** TODO 84 - Vim screencast #84: Corpus (20:26)
***** TODO 85 - Vim screencast #85: Custom vim:// protocol handler (8:06)
***** TODO 86 - Screencast #86: Git pager enhancements (13:53)
***** TODO 87 - Screencast #87: Neovim's built-in LSP client (4:10)
***** TODO 88 - Vim screencast #88: Tampermonkey (8:55)
***** TODO 89 - Vim screencast #89: Dirvish (6:42)
***** TODO 90 - Vim screencast #90: :filter, execute(), :redir (5:19)
***** TODO 91 - Screencast #91: Channel update (8:23)
***** TODO 92 - Screencast #92: Dotfiles (3:55)
***** TODO 93 - Vim screencast #93: TextYankPost (6:53)
***** TODO 94 - Vim #94: Sharpening the Axe (VimConf 2020) (26:15)
***** TODO 95 - Vim #95: VimConf 2020 Redux (12:40)
***** TODO 96 - Vim #96: Porting Vimscript to Lua (14:56)
***** TODO 97 - Vim #97: Tweaking star (13:16)
***** TODO 98 - Vim #98: Search and replace in VISUAL mode (10:06)
***** TODO 99 - Vim #99: Moving to Neovim... for realz (10:14)
***** TODO 100 - Screencast #100: Customizing commands with shell functions (10:51)
***** TODO 101 - Screencast #101: De-Google-ing your email (16:59)
***** TODO 102 - Vim #102: macOS keyboard bindings on Linux (33:44)
***** TODO 103 - Vim #103: Better LSP-powered completion in Neovim (13:17)
***** TODO 104 - Vim #104: Lspsaga (3:29)
***** TODO 105 - Vim #105: backupcopy (12:40)
***** TODO 106 - Vim expert reacts to other Vim expert (#106) (8:24)
***** TODO 107 - Vim #107: init.lua in Neovim v0.5.0 (24:22)
***** TODO 108 - Vim #108: sudo writes in Neovim (15:29)
***** TODO 109 - Vim #109: zen-mode.nvim (6:12)
***** TODO 110 - Neovim #110: Making a custom nvim-cmp source (10:02)
***** TODO 111 - macOS dead letters on Linux (14:44)
***** TODO 112 - Neovim 112: Command-T (17:32)
*** alpha2phi
**** Learn Neovim The Practical Way
https://alpha2phi.medium.com/learn-neovim-the-practical-way-8818fcf4830f#545a
*** DevOnDuty
**** Neovim
https://www.youtube.com/playlist?list=PLu-ydI-PCl0OEG0ZEqLRRuCrMJGAAI0tW
***** TODO 1 - Vim as IDE: Demo (2:34)
***** TODO 2 - Vim as IDE: Config Part 1 (4:05)
***** TODO 3 - Vim as IDE: Config Part 2 (5:37)
***** TODO 4 - Vim as IDE: Config Part 3 (Vimspector) (6:13)
***** TODO 5 - Neovim Plugin: nvim-dap (3:56)
***** TODO 6 - Neovim Plugin: nvim-dap Improvements (6:17)
***** TODO 7 - Neovim: Neogit and Diffview (3:51)
***** TODO 8 - Create Neovim Plugins with Lua (6:24)
***** TODO 9 - Let's create a Neovim plugin using Treesitter and Lua (13:52)
***** TODO 10 - Why I prefer Neovim over VSCode (5:36)
***** TODO 11 - Vim Plugin: Fugitive (4:54)
***** TODO 12 - Neovim plugin: Telescope (7:08)
***** TODO 13 - Neovim Plugin: Lightspeed (6:23)
***** TODO 14 - Top 3 Essential Neovim Plugins for Software Development (4:57)
***** TODO 15 - Neovim 0.6: What's new? (5:07)
***** TODO 16 - Lazygit (8:06)
***** TODO 17 - Neovim 0.7: What's new? (5:29)
***** TODO 18 - Make Neovim look pretty (5:05)
*** SKIP hardy jafar
*** NeuralNine
**** Vim
https://www.youtube.com/playlist?list=PL7yh-TELLS1Eevqs4-XmlSfrFOKb5C97K
***** TODO 1 - Vim Crash Course For Beginners (32:02)
***** TODO 2 - My Neovim Setup (23:25)
***** TODO 3 - Awesome Neovim Setup From Scratch - Full Guide (25:50)
***** TODO 4 - Vim Macros Are A Game Changer (16:55)
***** TODO 5 - NeoVim Plugins You Don't Want To Miss (22:16)
***** TODO 6 - Vimium Is Vim For Your Browser (14:10)
***** TODO 7 - Vim Snippets Are Next Level (10:38)
***** TODO 8 - UndoTree - The Mind-Blowing Vim Plugin (11:00)
*** Uthman Yuki
https://www.youtube.com/channel/UCs5oIDq24BgBQN5tl2IcHOg
**** Vimscript Tutorial
https://www.youtube.com/playlist?list=PLOe6AggsTaVv_IQsADuzhOzepA_tSAagN
**** Vim Tricks
https://www.youtube.com/playlist?list=PLOe6AggsTaVsdFEX7_U9k4YDyMMNb--zx
**** Lua Tutorial with Neovim
https://www.youtube.com/playlist?list=PLOe6AggsTaVvsguiM_LAbdkm7dFCxYxe3
**** Neovim Auto-Completion: nvim-cmp
https://www.youtube.com/playlist?list=PLOe6AggsTaVuIXZU4gxWJpIQNHMrDknfN
***** TODO 1 - nvim-cmp #1: Quickstart (3:00)
***** TODO 2 - nvim-cmp #2: change format & lspkind icons (2:18)
***** TODO 3 - nvim-cmp #3: basic custom mapping (1:46)
***** TODO 4 - nvim-cmp #4: custom mapping like supertab (2:06)
***** TODO 5 - nvim-cmp #5: custom mapping for endwise (1:37)
***** TODO 6 - nvim-cmp #6: buffer specific setup (2:09)
***** TODO 7 - nvim-cmp #7: different completion sources for each key (1:52)
***** TODO 8 - nvim-cmp #8: menu, menuone, noinsert, noselect ( differences ) (2:01)
***** TODO 9 - nvim-cmp #9: cmp with AI Autocomplete Tabnine (1:57)
***** TODO 10 - nvim-cmp #10: cmp-look vs fzf-dictionary comparison (1:36)
**** Neoim API Reference
https://www.youtube.com/playlist?list=PLOe6AggsTaVuBNSkgDgnb4PK5RXZdCmtf
**** Vim Plugin: fzf.vim
https://www.youtube.com/playlist?list=PLOe6AggsTaVsIlC4Nil-hkr5odM8SZDSt
**** Neovim Lua Plugin Development [ Colorscheme ]
https://www.youtube.com/playlist?list=PLOe6AggsTaVvjY25kxHlGccbYfe7hSqtp
**** Neovim Lua Plugin Development [ Basics ]
https://www.youtube.com/playlist?list=PLOe6AggsTaVt_L4PFe1_jVh1XbLmo7Lmn
*** benbrastmckie
**** Using NeoVim for Academic Writing
https://www.youtube.com/playlist?list=PLBYZ1xfnKeDToZ2XXbUGSC7BkorWdyNh3
***** DONE 1 - Demo Part 1: Optimizing Neo Vim for writing LaTeX (3:35)
CLOSED: [2022-09-11 dom 18:44]
only an introduction
***** TODO 2 - Demo Part 2: Building PDFs in Neo Vim with Autocomplete (13:28)
in this video:
1. zathura
2. coc
3. zotero
4. snippets

an interesting feature of the zathura pdf viewer with his config is when you
C-click on a line in zathura it goes to the line in neovim, and the other way
around too

another feature of zathura is "black mode", it inverts the colors, [can I
customize the colors?]
***** TODO 3 - Demo Part 3: Managing Project Files and Git Integration in Neo Vim (10:32)
***** TODO 4 - Demo Part 4: UndoTree, AutoPairs, Surround, and MultipleCursors for Writing LaTeX in Neo Vim (12:02)
***** TODO 5 - Demo Part 5: LaTeX Projects and Git Repositories with Neo Vim (10:39)
***** TODO 6 - Demo Part 6: Workflow for Academic Writing in Neo Vim (9:36)
***** TODO 7 - Demo Part 7: Pandoc Plugin for Converting Between LaTeX, Markdown, Word, etc. in Neo Vim (8:11)
***** TODO 8 - Demo Part 8: SubFiles Templates for Book Projects in LaTeX with Neo Vim (8:04)
**** Configuring NeoVim for Academic Writing
https://www.youtube.com/playlist?list=PLBYZ1xfnKeDT0LWxQQma8Yh-IfpmQ7UHr
***** TODO 1 - Config Part 1: Why You Should Go Full Vim (18:43)
***** TODO 2 - Config Part 2: Creating Your Own Config Repo (8:00)
***** TODO 3 - Config Part 3: General Settings and Text Support Plugins (13:53)
***** TODO 4 - Config Part 4: File Management Plugins (11:03)
***** TODO 5 - Config Part 5: Autocomplete Plugins (15:14)
***** TODO 6 - Config Part 6: Additional Plugins (8:31)
***** TODO 7 - Config Part 7: Custom Key Bindings (10:21)
**** Collaborating with Git in NeoVim
***** TODO 1 - Git Part 1: Initialising Repos, Making Commits, and Merging Branches in LazyGit with Neo Vim (12:18)
***** TODO 2 - Git Part 2: Pushing and Pulling Changes Between Multiple Authors and Resolving Merge Conflicts (14:30)
***** TODO 3 - Git Part 3: Including New Authors in Your GitHub Repository with LazyGit in Neo Vim (5:41)
***** TODO 4 - Git Part 4: Using the GitHub Cli to Collaborate on LaTeX Projects in NeoVim (11:15)
**** SKIP ? Installing NeoVim Config for Writing LaTeX
***** TODO 1 - Install Part 1: How to Configure Neo Vim from GitHub Repository (13:14)
***** TODO 2 - Install Part 2: Using Alacritty, Tmux, and Fish to Run Neo Vim (6:39)
***** TODO 3 - Install Part 3: Cheat Sheet for Writing LaTeX in Neo Vim (20:44)
*** Jeremy Kahn
**** Vimfficiency!
***** TODO 1 - Vimfficiency: Intro! (3:34)
***** TODO 2 - Vimfficiency: Navigation! (4:56)
***** TODO 3 - Vimfficiency: Finding Things! (6:03)
***** TODO 4 - Vimfficiency: Tool Integration! (9:17)
***** TODO 5 - Vimfficiency: Language Support! (5:01)
***** TODO 6 - Vimfficiency: Customizing! (4:40)
***** TODO 7 - Vim Plugins and Tricks That Give Me Super Powers! 🚀 (21:05)
***** TODO 8 - VimConf 2020: Giving Vim Superpowers 🦸‍♂️ (29:06)
*** TJ DeVries
**** Make a Simple Vim/Neovim Plugin from Scratch: cyclist.vim (vimscript)
https://www.youtube.com/watch?v=apyV4v7x33o
**** Neovim Workflow and Fuzzy Searching Code // #ATalkToRemember w/ Thorsten Ball
https://www.youtube.com/watch?v=u6EKq6z0CRU
**** Talks
https://www.youtube.com/playlist?list=PLep05UYkc6wSoUJj9GpRQ4W7B2ES9gFri
***** TODO 1 - Vimconf.live: Neovim Builtin LSP (43:24)
***** TODO 2 - Vimconf.live: Why is Lua a good fit for Neovim (33:10)
***** TODO 3 - Configuring Telescope Builtins (5:37)
***** TODO 4 - Tree sitter & LSP: Short Comparison (6:56)
***** TODO 5 - Why Neovim builtin LSP? (12:17)
***** TODO 6 - Why Telescope? (7:02)
***** TODO 7 - Vim & Neovim: My thoughts (7:52)
***** TODO 8 - PDE: A different take on editing code (20:01)
**** Neovim Release Interviews
https://www.youtube.com/playlist?list=PLep05UYkc6wSN7MRsO0nvRz9FzsnE49z9
***** TODO 1 - One Feature, Two of Me (12:44)
***** TODO 2 - Beyond nvim 0.7 with bfredl (37:11)
***** TODO 3 - nvim 0.7 Overview with Hillel (24:23)
***** TODO 4 - nvim 0.6 Release: gpanders (21:45)
***** TODO 5 - nvim 0.6 release: lewis6991 (24:53)
***** TODO 6 - Neovim 0.5 Release - Treesitter with vigoux (42:37)
***** TODO 7 - Neovim 0.5 Release - Retrospective and Interview with Justinmk (41:43)
***** TODO 8 - Neovim 0.5 Release - Lua Integration with Folke (13:16)
***** TODO 9 - Neovim 0.5 Release - Introduction (7:51)
**** Demos
https://www.youtube.com/playlist?list=PLep05UYkc6wSFQzkuomeNQF4LkgXoIa5Q
***** TODO 1 - nvim Feature Highlight: 'winbar' (4:05)
***** TODO 2 - [demo] First look at lsif-python (1:50)
***** TODO 3 - [New Feature] nvim --remote (2:26)
***** TODO 4 - Brand New Neovim Feature: Global Statusline (2:03)
***** TODO 5 - [Demo] Lua Autocmd Patterns (6:44)
***** TODO 6 - [Demo] Lua Augroups - Why And How To Use? (4:09)
***** TODO 7 - [Demo] Lua Autocmds in Neovim (by the author of Lua Autocmds) (6:23)
***** TODO 8 - [Demo] Find Implementations in Sourcegraph (3:44)
***** TODO 9 - [Demo] vim.schedule demystified (hopefully) (14:55)
***** TODO 10 - [Demo] How to make your first PR (5:45)
***** TODO 11 - [Demo] "uv.new_async" == multi-threaded Lua? (4:10)
***** TODO 12 - [Demo] Telescope + Sourcegraph v0.0.0.0.1 (1:15)
***** TODO 13 - [Demo] sg.nvim - Open files and jump to definition with sourcegraph (2:56)
**** TakeTuesday
https://www.youtube.com/playlist?list=PLep05UYkc6wT87iDtQZ3iafQannL4efEo
***** TODO 1 - TakeTuesday E01: nvim-cmp (30:42)
***** TODO 2 - TakeTuesday E02: Comment.nvim (16:25)
***** TODO 3 - TakeTuesday E03: Introduction to LuaSnip (22:52)
***** TODO 4 - TakeTuesday E04: LuaSnips - Advanced Configuration (27:56)
**** Bash2Basics
https://www.youtube.com/playlist?list=PLep05UYkc6wTWlugE_9Lj6JlLpvSBbkZ_
***** TODO 1 - Telescope and Nvim 0.5 Intro (ft. bash_bunni) (2:23:47)
***** TODO 2 - Neovim Builtin LSP Setup Guide (1:16:32)
***** TODO 3 - Neovim Lua Plugin From Scratch (1:48:24)
***** TODO 4 - Debugging In Neovim (ft BashBunni) (1:02:16)
*** thoughtbot
**** Vim Meetups
***** TODO 1 - How to Do 90% of What Plugins Do (With Just Vim) (1:14:03)
***** TODO 2 - Violin and Vim (24:01)
***** TODO 3 - Atreus, i3, and Vim (32:50)
***** TODO 4 - Neovim (42:19)
***** TODO 5 - Readline: Your Other Editor (20:24)
***** TODO 6 - The History of Vim (18:55)
***** TODO 7 - Vim Navigation Commands (21:42)
***** TODO 8 - Evil Mode: Or, How I Learned to Stop Worrying and Love Emacs (40:02)
***** TODO 9 - Mastering the Vim Language (36:20)
***** TODO 10 - Integrating js-beautify Into Vim (1:07:03)
***** TODO 11 - Let Vim Do the Typing (32:07)
***** TODO 12 - Automating Text Insertion With Vim (48:47)
***** TODO 13 - Rich Soni Explains VimScript (45:03)
***** TODO 14 - John Crepezzi's Vim (30:15)
***** TODO 15 - Your First Vim Plugin (36:38)
***** TODO 16 - Learning Vim in a Week (23:51)
***** TODO 17 - tpope's Vim Config and Plugins (58:16)
***** TODO 18 - VIM Grammar (27:40)
*** s1n7ax
**** Neovim Lua
https://www.youtube.com/playlist?list=PL0EgBggsoPCk1WCos2txThsxhg0fT5nqD
***** TODO 1 - Neovim Lua #1 Vim Options (4:05)
***** TODO 2 - Neovim Lua #2 Vim Keymaps (7:41)
***** TODO 3 - nvim-terminal - A Lua-Neovim plugin that toggles a terminal (5:27)
***** TODO 4 - Neovim-Lua Plugin Development Beginners Guide (21:31)
***** TODO 5 - nvim-treesitter - Tree Sitter in Neovim (17:38)
***** TODO 6 - [DEMO] Neovide - A beautiful neovim client (1:03)
***** TODO 7 - [Neovim] :Lua command print expression (0:50)
***** TODO 8 - [Neovim Treesitter] Generating Javadoc Comments - Part I (20:24)
***** TODO 9 - [Neovim Treesitter] Generating Javadoc Comments - Part II (10:38)
***** TODO 10 - [New Feature] Neovim Winbar (9:00)
***** TODO 11 - [Neovim Plugin] impatient.nvim (1:55)
***** TODO 12 - [DEMO] Power of LuaSnip with TreeSitter in Neovim (0:57)
***** TODO 13 - [New Feature] WinBar & WinBarNC highlight groups (5:03)
**** Vim/Neovim (duplicate from above?)
***** TODO 1 - [DEMO] Vim/NeoVim Typescript React with TSlint, Prettier, Code Intellisense and more (1:03)
***** TODO 2 - How to configure Neovim for React and Typescript Development including TSlint and Prettier (24:50)
***** TODO 3 - Vim | Recording (complex-repeat) (2:55)
***** TODO 4 - VIM | Selecting a Method/Function/Block (1:23)
***** TODO 5 - VIM Tricks #1 (3:54)
***** TODO 6 - Vim on Visual Studio Code (11:33)
***** TODO 7 - [DEMO] Vim as a Java IDE (0:57)
***** TODO 8 - Dotnvim - My new Neovim configuration (9:06)
***** TODO 9 - Joe Rogan Experience #1208 - Jordan Peterson (2:55:04)
***** TODO 10 - Axel Springer Award 2020 (1:06:52)
***** TODO 11 - Neovim Lua #1 Vim Options (4:05)
***** TODO 12 - Neovim Lua #2 Vim Keymaps (7:41)
***** TODO 13 - nvim-terminal - A Lua-Neovim plugin that toggles a terminal (5:27)
***** TODO 14 - Neovim-Lua Plugin Development Beginners Guide (21:31)
***** TODO 15 - nvim-treesitter - Tree Sitter in Neovim (17:38)
***** TODO 16 - All Programmers Can Relate (0:36)
***** TODO 17 - [DEMO] Neovide - A beautiful neovim client (1:03)
***** TODO 18 - VIM Tricks #3 multi-line number increment (2:15)
***** TODO 19 - VIM Tricks #2 multi-line changes with :global (2:34)
***** TODO 20 - nvim-comment-frame - Organize your code using comment frames (4:28)
***** TODO 21 - Fix for Neovim LSP diagnostics are not updating issue (3:06)
***** TODO 22 - VIM Tricks #4 substitute matching groups (2:51)
***** TODO 23 - [DEMO] Debugging Java on Neovim (not a tutorial) (1:48)
***** TODO 24 - How to Setup Neovim for Debugging Java (17:28)
***** TODO 25 - Neovim Treesitter Query (18:28)
***** TODO 26 - [Neovim] :Lua command print expression (0:50)
***** TODO 27 - [Neovim Treesitter] Generating Javadoc Comments - Part I (20:24)
***** TODO 28 - [Alacritty] Extended Keys for Neovim 0.7 (3:20)
***** TODO 29 - [Neovim Treesitter] Generating Javadoc Comments - Part II (10:38)
***** TODO 30 - [New Feature] Neovim Winbar (9:00)
***** TODO 31 - [Neovim Plugin] impatient.nvim (1:55)
***** TODO 32 - [New Feature] Selection Search (2:27)
***** TODO 33 - [DEMO] Power of LuaSnip with TreeSitter in Neovim (0:57)
***** TODO 34 - [New Feature] WinBar & WinBarNC highlight groups (5:03)
**** Vim Tricks
***** TODO 1 - VIM Tricks #2 multi-line changes with :global (2:34)
***** TODO 2 - VIM Tricks #1 (3:54)
***** TODO 3 - VIM Tricks #3 multi-line number increment (2:15)
***** TODO 4 - VIM Tricks #4 substitute matching groups (2:51)
***** TODO 5 - [Alacritty] Extended Keys for Neovim 0.7 (3:20)
***** TODO 6 - [New Feature] Selection Search (2:27)
*** haxpor
**** Vim Techniques Series
***** TODO 1 - Vim Techniques 01 - :term | Keep productivity flows! (4:31)
***** TODO 2 - Vim Techniques 02 - Count number of Occurrences and Lines of Text (2:55)
***** TODO 3 - Vim Techniques 03 - GDB Debugging right inside Vim (13:35)
***** TODO 4 - Vim Techniques 04 - Tag, 5 Interesting Ways to Jump (13:40)
***** TODO 5 - Vim Techniques 05 - Quickfix List / Location List (17:34)
***** TODO 6 - Vim Techniques 06 - Visual Block Mode (5:23)
***** TODO 7 - Vim Techniques 07 - = (equal symbol) Indentation (5:50)
***** TODO 8 - Vim Techniques 08 - autocmd (20:05)
***** TODO 9 - Vim Techniques 09 - augroup (with Bonus: autocmd!) (15:36)
***** TODO 10 - Vim Techniques 10 - listchars + wrap + list (12:41)
***** TODO 11 - Vim Techniques 11 - Reading file content from stdin (11:48)
***** TODO 12 - Vim Techniques 12 - Jump List (10:28)
***** TODO 13 - Vim Techniques 13 - :) (1:45)
***** TODO 14 - Vim Techniques 14 - Executing vim commands at command line before editing the file (18:52)
***** TODO 15 - Vim Techniques 15 - Movement with H, M, L (1:55)
***** TODO 16 - Vim Techniques 16 - Page-based Movement (6:36)
***** TODO 17 - Vim Techniques 17 - vimdiff (part 1) (19:24)
***** TODO 18 - Vim Techniques 17 - vimdiff (part 2) (27:47)
***** TODO 19 - Vim Techniques 18 - Lookaround (Lookahead & Lookbehind) Regex (26:22)
***** TODO 20 - Vim Techniques 19 - Concealing Sensitive Data (20:11)
*** Code Smell
**** Vim and You
https://www.youtube.com/playlist?list=PLSf43fnldIpYipi-FjzjV6fAYUGysfjY8
***** TODO 1 - JavaScript with Neovim (12:10)
***** TODO 2 - Surround Vim Selections with Anything | Expert Neovim (5:22)
***** TODO 3 - 5 Terrific Neovim Telescope Extensions for 2022 🔭 (17:32)
***** TODO 4 - Motions and Operators | Fast Vim Fundamentals 🔥 (3:49)
***** TODO 5 - Top 6 Neovim 0.6 Plugins for Developers (10:35)
***** TODO 6 - Neovim Lua Buffer API | Neovim 💙💚 Lua (11:53)
***** TODO 7 - Customize nvim-cmp | Neovim ❤️ Lua (5:51)
***** TODO 8 - Migrating Neovim ftplugins to Lua (4:20)
***** TODO 9 - Coding a foldcolumn Toggle Function | Neovim 💙 Lua (22:48)
***** TODO 10 - Neovim Lua Key Mapping (11:50)
***** TODO 11 - Install Neovim from Source (3:38)
***** TODO 12 - The Neovim User Morning Routine (2:03)
***** TODO 13 - Learning to Speak the Rust Language with Neovim Treesitter 🦀 (5:37)
***** TODO 14 - My Neovim 0.5 Rust 2021 Setup 🦀 ⚙️ (8:41)
***** TODO 15 - Develop a GraphQL Schema Completion Source in Lua | Advanced Neovim (28:24)
***** TODO 16 - Top 5 Neovim 0.5 Plugins for Developers | 2021 (7:43)
***** TODO 17 - Get set up for open source contributions (10:14)
***** TODO 18 - Neovim: Customizing Telescope 🔭 (14:49)
***** TODO 19 - From FZF to Telescope with Neovim 🔭 (14:24)
***** TODO 20 - GitHub CLI in Vim with FZF (12:01)
***** TODO 21 - Neovim LSP Diagnostics In Your Statusline 🦀 ⚙ (11:05)
***** TODO 22 - Customize your Syntax in Vim - Rust Edition 🦀 ⚙ (23:31)
***** TODO 23 - Vim Mappings | 7 life changing key maps (actually 16!) (16:31)
***** TODO 24 - Vim and FZF in 2021 (17:59)
***** TODO 25 - Neovim from Vim - Is 2021 the year to transition? (18:26)
***** TODO 26 - Using Vim as Vim Intended (11:14)
***** TODO 27 - Vim Rust Setup (4:25)
***** TODO 28 - Vim - Execute your visual selection (2:12)
***** TODO 29 - Git rebase --interactive | Vim Fugitive (9:52)
***** TODO 30 - Vim Tips - Medium Rare (45:16)
***** TODO 31 - Vimzilla: Sending Eminem's Godzilla lyrics into Vim (4:04)
***** TODO 32 - VS Code and Vim (9:01)
**** Life in a Shell
https://www.youtube.com/playlist?list=PLSf43fnldIpY2nz2ETzeRrlkHVulqdv3f
***** TODO 1 - Neovim Lua Key Mapping (11:50)
***** TODO 2 - Install Neovim from Source (3:38)
***** TODO 3 - The Neovim User Morning Routine (2:03)
***** TODO 4 - Get set up for open source contributions (10:14)
***** TODO 5 - From iTerm to Alacritty (27:31)
***** TODO 6 - How to use FZF, curl & jq together (18:53)
***** TODO 7 - More Fuzzy Fun with FZF (10:50)
***** TODO 8 - Unix Touch Command | Grokking Unix Commands (6:49)
***** TODO 9 - Zsh Aliases and Functions | Useful Examples and How to Make Your Own (43:03)
**** Intermediate Vim
https://www.youtube.com/playlist?list=PLSf43fnldIpY7waBgCYFcvKMmaGOCROnS
***** TODO 1 - Neovim Configuration with Lua | Intermediate-level (25:22)
***** TODO 2 - Top 5 Neovim 0.5 Plugins for Developers | 2021 (7:43)
***** TODO 3 - Neovim Lua Key Mapping (11:50)
***** TODO 4 - Migrating Neovim ftplugins to Lua (4:20)
***** TODO 5 - Customize nvim-cmp | Neovim ❤️ Lua (5:51)
***** TODO 6 - Neovim Lua Buffer API | Neovim 💙💚 Lua (11:53)
***** TODO 7 - Develop a GraphQL Schema Completion Source in Lua | Advanced Neovim (28:24)
***** TODO 8 - Coding a foldcolumn Toggle Function | Neovim 💙 Lua (22:48)
***** TODO 9 - Top 6 Neovim 0.6 Plugins for Developers (10:35)

***** TODO 10 - Surround Vim Selections with Anything | Expert Neovim (5:22)
**** Advanced Neovim
https://www.youtube.com/playlist?list=PLSf43fnldIpb6W2vdUd0p12a9m_2pUpQE
***** TODO 1 - Surround Vim Selections with Anything | Expert Neovim (5:22)
***** TODO 2 - Top 6 Neovim 0.6 Plugins for Developers (10:35)
***** TODO 3 - Lua Tables Tutorial | Neovim 💚💙 Lua (5:48)
***** TODO 4 - Neovim Lua Buffer API | Neovim 💙💚 Lua (11:53)
***** TODO 5 - Customize nvim-cmp | Neovim ❤️ Lua (5:51)
***** TODO 6 - Migrating Neovim ftplugins to Lua (4:20)
***** TODO 7 - Coding a foldcolumn Toggle Function | Neovim 💙 Lua (22:48)
***** TODO 8 - Neovim Lua Key Mapping (11:50)
***** TODO 9 - Install Neovim from Source (3:38)
***** TODO 10 - Learning to Speak the Rust Language with Neovim Treesitter 🦀 (5:37)
***** TODO 11 - Develop a GraphQL Schema Completion Source in Lua | Advanced Neovim (28:24)
**** Lua 🔵
https://www.youtube.com/playlist?list=PLSf43fnldIpate3S5YN9_fxpimoDIKMyW
***** TODO 1 - Neovim Lua Buffer API | Neovim 💙💚 Lua (11:53)
***** TODO 2 - Neovim Lua Key Mapping (11:50)
***** TODO 3 - Neovim Configuration with Lua | Intermediate-level (25:22)
***** TODO 4 - Customize nvim-cmp | Neovim ❤️ Lua (5:51)
***** TODO 5 - Develop a GraphQL Schema Completion Source in Lua | Advanced Neovim (28:24)
***** TODO 6 - Coding a foldcolumn Toggle Function | Neovim 💙 Lua (22:48)
***** TODO 7 - Migrating Neovim ftplugins to Lua (4:20)
***** TODO 8 - The Neovim User Morning Routine (2:03)
***** TODO 9 - Top 5 Neovim 0.5 Plugins for Developers | 2021 (7:43)
***** TODO 10 - My Neovim 0.5 Rust 2021 Setup 🦀 ⚙️ (8:41)
***** TODO 11 - Lua Tables Tutorial | Neovim 💚💙 Lua (5:48)
***** TODO 12 - Top 6 Neovim 0.6 Plugins for Developers (10:35)
***** TODO 13 - Surround Vim Selections with Anything | Expert Neovim (5:22)
